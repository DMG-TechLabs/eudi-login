[[{"l":"eudi-login"},{"l":"Get Started"},{"l":"Endpoints","p":["localhost:80: Demo App using the eudi-login","localhost:8080: The eudi-login service"]},{"l":"Authors","p":["KDesp73 (Konstantinos Despoinidis)","creatorkostas (Konstantinos Mokas)","ThanasisGeorg (Athanasios Georgalis)"]}],[{"l":"Getting Started"},{"l":"Adding the EUDI SDK to your project","p":["The EUDI SDK is a JavaScript library that allows you to integrate the EUDI Wallet into your application. To use the SDK, you need to include the eudi-sdk.js file in your HTML file.","The SDK is temporarily hosted on GitHub. It will be moved to a CDN in the future."]},{"l":"Initializing the SDK","p":["To use the SDK, you need to pass into the EUDILogin function (that is used to start the authentication process) the configuration options.","config: An object containing the configuration options for the authentication process. The available options are:","AgeOver18: Whether the user is over 18 years old.","HealthID: Whether to include Health ID attestation.","IBAN: Whether to include IBAN attestation.","Loyalty: Whether to include Loyalty attestation.","mDL: Whether to include mobile Driverâ€™s License (mDL) attestation.","MSISDN: Whether to include MSISDN (phone number) attestation.","PhotoId: Whether to include Photo ID attestation.","PID: Whether to include Personal ID (PID) attestation.","PowerOfRepresentation: Whether to include Power of Representation attestation.","PseudonymDeferred: Whether to include Pseudonym Deferred attestation.","Reservation: Whether to include Reservation attestation.","TaxNumber: Whether to include Tax Number attestation.","target: (optional) The URL to redirect to after the authentication process. If not provided there will be no redirect."]},{"l":"Handling the authentication result","p":["After the authentication process is complete, the SDK will redirect to the specified target URL. If the authentication process is successful, the URL will contain the user's data in the query parameters. If the authentication process is cancelled or fails, the URL will contain an error message.","Possible values for the event.data property are:","Missing attestations: The user did not provide all required attestations.","Cancelled: The authentication process was cancelled.","An object containing the user's data."]},{"l":"Retrieving the user data","p":["To retrieve the user data, you can use the EUDILoadData function. This function returns a Map object that contains the user's data.","The Map object contains the following keys:","AgeOver18: The user's age verified by the EUDI Wallet.","HealthID: The user's Health ID.","IBAN: The user's IBAN.","Loyalty: The user's Loyalty card number.","mDL: The user's mDL number.","MSISDN: The user's MSISDN (phone number).","PhotoId: The user's Photo ID.","PID: The user's Personal ID.","PowerOfRepresentation: The user's Power of Representation.","PseudonymDeferred: The user's Pseudonym Deferred.","Reservation: The user's Reservation.","TaxNumber: The user's Tax Number."]},{"l":"Example","p":["Here's an example of how to use the SDK in a simple HTML file:","In this example, the user will be prompted to login with the EUDI Wallet. After the authentication process is complete, the user will be redirected to https://your-domain.com/homepage."]}],[{"l":"Setup","p":["The following steps will help you get started."]},{"i":"step-1-clone-the-repository","l":"Step 1: Clone the repository"},{"i":"step-2-start-the-application","l":"Step 2: Start the application","p":["If there is onether service running on port 80, 443, 8080, 8443 you need to stop it first or change the ports in the docker-compose.yml file.","If you have not installed the make tool on your system, you can use the following command:"]},{"i":"step-3-open-the-demo-application-in-your-browser","l":"Step 3: Open the demo application in your browser","p":["Open your browser and navigate to http://localhost:80.(No custom configuration needed)"]},{"l":"Stop the application","p":["If you have started the application using Docker Compose command, you can also use the following command:"]},{"l":"Logic of this setup","p":["This setup is based on the following principles:","The application is hosted on a Docker container.","The demo application is configured to run on port localhost:80.","The backend is configured to run on port localhost:8080.","The demo application and backend are configured to start using the docker-compose.yml file.","The Makefile file is used to define the commands for starting and stopping the application. The docker-compose.yml file is used to define the services that are part of the application. The retype.yml file is used to define the documentation for the application.","The Demo application which resembles a banking application is usind the EUDI Wallet for authenticating the user. This is achived by using the EUDI SDK which is a JavaScript library that allows you to integrate the EUDI Wallet into your application. The Backend is responsible for handling the authentication process and returning the user data to the Demo application."]}],[{"l":"Authorization Process"},{"l":"Overview","p":["This document describes the authorization process facilitated through the EUDI Wallet. The process ensures secure identity verification by interacting with the /ui/presentations endpoint and handling user authentication via QR codes."]},{"l":"Steps"},{"l":"1. Initialize Transaction","p":["The system initializes an authorization transaction using a predefined configuration.","This configuration defines the required attestations and constructs the request body accordingly.","The constructed request body is sent to the /ui/presentations endpoint via the proxy.","The response contains transaction information, confirming the transaction's initialization."]},{"l":"2. Generate QR Code for Authentication","p":["Using the client_id and request_uri from the response, a URI is created.","The URI is encoded into a QR code.","On mobile devices, a button is displayed for initiating authentication."]},{"l":"3. Poll for Authorization Status","p":["The system immediately starts polling the /ui/presentations/{transaction_id} endpoint via the proxy.","Polling continues for a maximum of 2 minutes, checking for user confirmation."]},{"i":"4-user-confirmation--authentication-completion","l":"4. User Confirmation & Authentication Completion","p":["The user confirms the transaction in the EUDI Wallet application.","If the user holds all required attestations, the authorization is marked as complete.","Otherwise a dialog appears with a message informing the user that he is missing a required document.","The user is redirected to the original website upon successful authentication."]},{"l":"Security Considerations","p":["Polling Timeout: The system enforces a 2-minute timeout to prevent indefinite polling.","QR Code Encoding: The authentication URI is securely encoded to avoid manipulation.","Proxy Handling: Requests pass through a secure proxy to prevent direct exposure of backend endpoints."]},{"l":"Conclusion","p":["This process ensures secure and efficient user authentication using the EUDI Wallet, minimizing security risks while maintaining a seamless user experience."]}],[{"l":"Proxy"},{"l":"Overview","p":["This document explains the functionality of two PHP files that implement a proxy system. The proxy is designed to securely forward HTTP requests while enforcing access control policies and preventing security vulnerabilities such as SSRF (Server-Side Request Forgery)."]},{"i":"file-1-redirectphp","l":"File 1: redirect.php"},{"l":"Purpose","p":["This script acts as an HTTP proxy, forwarding client requests to backend services while enforcing security policies. It ensures that only allowed origins can access the proxy and prevents unauthorized access to internal network resources."]},{"l":"Key Features","p":["CORS Handling: Implements Cross-Origin Resource Sharing (CORS) to control which origins can access the proxy.","Request Forwarding: Extracts the target URL from the request and forwards it using cURL.","SSRF Protection: Checks if the target URL resolves to an internal IP and blocks such requests.","Error Handling: Ensures invalid requests return appropriate HTTP error codes and messages.","Security Enhancements: Prevents XSS attacks by sanitizing output data."]},{"i":"file-2-proxyphp","l":"File 2: proxy.php"},{"i":"purpose-1","l":"Purpose","p":["This file defines the Proxy class, which manages the allowed proxy endpoints and retrieves the appropriate target URL for forwarding."]},{"i":"key-features-1","l":"Key Features","p":["Configuration Loading: Reads allowed proxy target mappings from a JSON file.","Validation: Ensures that only predefined paths are accessible through the proxy.","URL Resolution: Matches incoming request paths to valid target URLs."]},{"l":"Security Considerations","p":["CORS Restrictions: Only specific origins can access the proxy to prevent unauthorized cross-origin requests.","SSRF Mitigation: Internal and reserved IP addresses are blocked from being accessed via the proxy.","Input Sanitization: Ensures only valid JSON and URLs are processed, reducing the risk of injection attacks."]},{"l":"Conclusion","p":["These PHP scripts work together to provide a secure proxy mechanism for forwarding requests to predefined backend services. The implementation follows best security practices to mitigate common web vulnerabilities while ensuring flexibility in handling API requests."]}],[{"l":"Scalability"},{"l":"Introduction","p":["This section will provide the possible ways to scale this application."]},{"l":"Possible solutions","p":["Some of the possible solutions to scale this application are:"]},{"l":"Vertical scaling","p":["Vertical scaling involves adding more resources to a single machine to handle increased traffic."]},{"l":"Horizontal scaling","p":["Horizontal scaling involves adding more machines to the cluster to handle increased traffic.","One way to achieve horizontal scaling is by using a load balancer. A load balancer distributes incoming traffic across multiple servers to ensure that no single server is overwhelmed. Another way to achieve vertical scaling is by using a container orchestration platform like Kubernetes. Kubernetes provides a way to manage and deploy containerized applications across multiple nodes in a cluster by running multiple replicas of your application and using a load balancer."]}],[{"l":"UI"},{"l":"Overview","p":["The EU Digital Identity Wallet (EUDI Wallet) is a digital authentication and verification system that allows users to securely store and share their identity credentials."]},{"l":"Authentication Process"},{"l":"1. Login Selection","p":["Users can log in using the EUDI Wallet or Google authentication.","This provides flexibility for users who may not have an EUDI Wallet.","Login Options"]},{"l":"2. Data Sharing Consent","p":["Age Verification (Over 18)","Data Sharing Consent","Health ID","IBAN (Banking Information)","Loyalty Membership","Mobile Driverâ€™s License","Personal Identification (PID)","Phone Number","Photo ID","Power of Representation","Pseudonym Deferred","Reservation Data","Tax Number","The following data types may be requested:","Users are asked to approve data sharing with the requesting service.","Users can either Cancel or Continue to proceed."]},{"l":"3. QR Code Authentication","p":["Users are presented with a QR Code that they must scan using their EUDI Wallet app.","Alternatively, they can click the \"Open Wallet\" button to proceed.","QR Code Authentication"]},{"l":"Programming Languages","p":["For this site the programming languages that has been used are","HTML","CSS","Javascript"]},{"l":"Conclusion","p":["The EU Digital Identity Wallet simplifies authentication while maintaining strong security and privacy standards. It enables seamless digital identity verification for users across different platforms."]}],[{"l":"Future Updates"}],[{"l":"Impact"}],[{"l":"References","p":["cbor-x","qrcode"]}]]